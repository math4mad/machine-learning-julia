---
title: "🐧🐧 Penguins dataset"
---

:::{.callout-note title="info"}

`Penguins` data set is another famous dataset for data science,
compare with `Iris`, `Penguins` has more categorical feature.

please reference :

-  [Palmer penguins website](https://allisonhorst.github.io/palmerpenguins/index.html)
-  [[Aog Tutorial 🐧](https://aog.makie.org/dev/generated/penguins/#Tutorial)]

:::

## 1. load csv
```{julia}
using CSV,DataFrames,Tidier
using CairoMakie,AlgebraOfGraphics,MakieThemes
Makie.set_theme!(ggthemr(:dust))

df=CSV.File("../data/penguine_data.csv")|>DataFrame
first(df,5)
```

## 2.  describe dataframe
```{julia}
describe(df)
```

## 3.  EDA 

### 3.1 frequency

```{julia}
#| label: fig-penguins-fequency
#| fig-cap: "fig-penguins-fequency"
#| fig-cap-location : margin
#| fig-align: "center"
#| warning: false
datalayer=data(df)
mappinglayer=frequency()*mapping(:species,color = :island,dodge = :island)
axis = (width = 225, height = 225)
draw(datalayer*mappinglayer,axis=axis)
```

### 3.2 correlation of two variables
```{julia}
#show(names(df))
cats=["bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"]
len=length(cats)
cats=Symbol.(cats)
```

```{julia}
#| label: fig-penguins-pairplot
#| fig-cap: "fig-penguins-pairplot"
#| fig-cap-location : margin
#| fig-align: "center"
#| warning: false
palette = (color=tuple.(["#FC7808", "#8C00EC", "#107A78"], 0.65),
           marker=[:circle, :utriangle, :rect])
cycle = Cycle([:color, :marker], covary=true)

function make_layer(sy1::Symbol,sy2::Symbol)
   mapping_layer=sy1==sy2 ? mapping(sy1,color=:species) : mapping(sy1,sy2,color=:species)
   vis_layer=sy1==sy2 ? visual(Density,color=:species) : visual(Scatter,color=:species,strokewidth=1,storkecolor=:black)
   return  datalayer*mapping_layer*vis_layer
end

with_theme(ggthemr(:dust),resolution = (800,800), palette=palette, Scatter=(cycle=cycle,)) do
        cl=0.1
        fig = Figure()
        for i in 1:len
            for  j in 1:len
                ax=Axis(fig[i,j])
                j==1 ? ax.ylabel= String(cats[i]) : nothing
                i==len ? ax.xlabel= String(cats[j]) : nothing
                layer=make_layer(cats[i],cats[j])
              [i,j]==[len,len] ? cl=draw!(ax,layer) : draw!(ax,layer)
            end
        end
        legend!(fig[2:3,5], cl)
        fig
end

```

### 3.3  varying weights of the penguins

```{julia}
#| label: fig-penguins-bodymass 
#| fig-cap: "fig-penguins-bodymass"
#| fig-cap-location : margin
#| fig-align: "center"
#| warning: false

ax=(width = 225, height = 225)
mappinglayer2=mapping(:species, :bill_depth_mm;color=:species)
vislayer2=visual(BoxPlot,show_notch=true)
draw(datalayer*mappinglayer2*vislayer2,axis=ax)
```


